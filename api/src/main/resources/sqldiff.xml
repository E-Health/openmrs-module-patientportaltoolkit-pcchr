<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqldiff PUBLIC "-//OpenMRS//DTD OpenMRS SQL Diff Config 1.0//EN" "http://resources.openmrs.org/doctype/sqldiff-1.0.dtd">

<sqldiff version="1.0">
	<help>
		USE:
			The diffs are ordered by datamodel version number.
			The script can be run in a top down fashion and is
			expected to not failor overwrite old data
		
		EXPECT:
			- "use business-database-name;" was called prior to
			   calling this script
	</help>
	
	<diff>
		<version>1.0.0</version>
		<author>Hui Xiao</author>
		<date>Nov 22 2010</date>
		<description>
			Create phr_sharing_token table, for storing patient initiated relationships and data sharing authorization
		</description>
		<sql>	
			CREATE TABLE IF NOT EXISTS `phr_sharing_token` (
			  `id` int(11) NOT NULL auto_increment,
			  `sharing_token` varchar(30),
			  `patient_id` int(11) NOT NULL default '0',
			  `relationship_person_id` int(11) NULL,
			  `relationship_person_name` varchar(100),
			  `relationship_person_email` varchar(100),
			  `relationship_type` varchar(50),
			  `share_start_date` datetime NOT NULL default '2000-01-01 00:00:00',
			  `share_activate_date` datetime,
			  `share_expire_date` datetime NOT NULL default '2000-01-01 00:00:00',
			  `creator` int(11) NOT NULL default '0',
			  `share_type` varchar(30),
			  `date_created` datetime NOT NULL default '2000-01-01 00:00:00',
			  `changed_by` int(11) default NULL,
  			  `date_changed` datetime default NULL,
			  `retired` tinyint(1) NOT NULL default '0',
			  `uuid` char(38),
			  `retired_by` int(11) default NULL,
			  `date_retired` datetime default NULL,
			  `retire_reason` varchar(255) default NULL,
			  PRIMARY KEY  (`id`),
			  KEY `User who created phr_sharing_token` (`creator`),
			  KEY `Token used by 3rd party` (`sharing_token`),
			  KEY `Patient who initiated relationship and sharing` (`patient_id`),
			  KEY `Person with whom the patient specified a relationship` (`relationship_person_id`),
			  KEY `User who changed phr_sharing_token` (`changed_by`),
			  CONSTRAINT `User who created phr_sharing_token` FOREIGN KEY (`creator`) REFERENCES `users` (`user_id`),
			  CONSTRAINT `Patient who initiated relationship and sharing` FOREIGN KEY (`patient_id`) REFERENCES `patient` (`patient_id`),
			  CONSTRAINT `Person with whom the patient specified a relationship` FOREIGN KEY (`relationship_person_id`) REFERENCES `person` (`person_id`),
			  CONSTRAINT `User who changed phr_sharing_token` FOREIGN KEY (`changed_by`) REFERENCES `users` (`user_id`),
              CONSTRAINT `User who retired phr_sharing_token` FOREIGN KEY (`retired_by`) REFERENCES `users` (`user_id`),			  
			  UNIQUE (`sharing_token`)
			) ENGINE=InnoDB DEFAULT CHARSET=utf8;
		</sql>
	</diff>
	
	<diff>
		<version>1.0.1</version>
		<author>Hui Xiao</author>
		<date>Nov 22 2010</date>
		<description>
			Create phr_security_rule  table, for storing dynamic role based security configuration (PHR privilege *--* PHR dynamic role)
		</description>
		<sql>	
			CREATE TABLE IF NOT EXISTS `phr_security_rule` (
			  `id` int(11) NOT NULL auto_increment,
			  `privilege` varchar(100),
			  `required_role` varchar(100),
			  `description` varchar(100),
			  `creator` int(11) NOT NULL default '0',
			  `date_created` datetime NOT NULL default '2000-01-01 00:00:00',
			  `changed_by` int(11) default NULL,
  			  `date_changed` datetime default NULL,
			  `retired` tinyint(1) NOT NULL default '0',
			  `uuid` char(38),
			  `retired_by` int(11) default NULL,
			  `date_retired` datetime default NULL,
			  `retire_reason` varchar(255) default NULL,
			  PRIMARY KEY  (`id`),
			  KEY `User who created phr_security_rule` (`creator`),
			  KEY `name of privilege` (`privilege`),
			  KEY `name of a dynamic role required` (`required_role`),
			  CONSTRAINT `User who created phr_security_rule` FOREIGN KEY (`creator`) REFERENCES `users` (`user_id`),
			  CONSTRAINT `User who changed phr_security_rule` FOREIGN KEY (`changed_by`) REFERENCES `users` (`user_id`),
              CONSTRAINT `User who retired phr_security_rule` FOREIGN KEY (`retired_by`) REFERENCES `users` (`user_id`)              			  
			) ENGINE=InnoDB DEFAULT CHARSET=utf8;
			
		</sql>
	</diff>
	
	<diff>
		<version>1.0.2</version>
		<author>Hui Xiao</author>
		<date>Nov 22 2010</date>
		<description>
			Create phr_allowed_url  table, for storing dynamic role based security configuration (PHR allowed URL *--* PHR privilege)
		</description>
		<sql>	
			CREATE TABLE IF NOT EXISTS `phr_allowed_url` (
			  `id` int(11) NOT NULL auto_increment,
			  `allowed_url` varchar(200),
			  `required_privilege` varchar(100),
			  `description` varchar(100),
			  `creator` int(11) NOT NULL default '0',
			  `date_created` datetime NOT NULL default '2000-01-01 00:00:00',
			  `changed_by` int(11) default NULL,
  			  `date_changed` datetime default NULL,
			  `retired` tinyint(1) NOT NULL default '0',
			  `uuid` char(38),
			  `retired_by` int(11) default NULL,
			  `date_retired` datetime default NULL,
			  `retire_reason` varchar(255) default NULL,
			  PRIMARY KEY  (`id`),
			  KEY `User who created phr_allowed_url` (`creator`),
			  KEY `Name of privilege required` (`required_privilege`),
			  KEY `URL allowed for PHR user to access` (`allowed_url`),
			  CONSTRAINT `User who created phr_allowed_url` FOREIGN KEY (`creator`) REFERENCES `users` (`user_id`),
			  CONSTRAINT `User who changed phr_allowed_url` FOREIGN KEY (`changed_by`) REFERENCES `users` (`user_id`),
              CONSTRAINT `User who retired phr_allowed_url` FOREIGN KEY (`retired_by`) REFERENCES `users` (`user_id`)			  
			) ENGINE=InnoDB DEFAULT CHARSET=utf8;			
		</sql>
	</diff>

	<diff>
		<version>1.0.3</version>
		<author>Hui Xiao</author>
		<date>15 Mar 2011</date>
		<description>
			Create phr_event_log  table to track user activities for research purpose 
		</description>
		<sql>	
create table IF NOT EXISTS phr_event_log (
id int(16) NOT NULL auto_increment,
event_type varchar(50),
event_date datetime,
user_id int(11),
session_id varchar(36),
patient_id int(11),
event_content text,
PRIMARY KEY (`id`),
CONSTRAINT `fk_phr_event_log_user_id` FOREIGN KEY (`user_id`) REFERENCES `users` (`user_id`),				   
CONSTRAINT `fk_phr_event_log_patient_id` FOREIGN KEY (`patient_id`) REFERENCES `patient` (`patient_id`)				   
);	
		</sql>
	</diff>

</sqldiff>
